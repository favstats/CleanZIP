name: Build, Test, and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering from GitHub UI

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            extension: ''
          - os: macos-latest
            platform: macos
            extension: '.app'
          - os: windows-latest
            platform: windows
            extension: '.exe'
    continue-on-error: true  # Continue even if the platform-specific job fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libjpeg-dev \
            libtiff-dev \
            libsdl1.2-dev \
            libnotify-dev \
            freeglut3-dev \
            libsm-dev \
            libgtk2.0-dev \
            libgtk-3-dev

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wxPython PySimpleGUIWx pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --windowed delete_media_from_zip.py
        env:
          WXWIN: ${{ github.workspace }}  # Fix for wxPython on Windows

      - name: Verify build output (Linux/Mac)
        if: matrix.os != 'windows-latest'
        run: |
          ls -al dist/

      - name: Verify build output (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Get-ChildItem dist

      - name: Test the built executable
        run: |
          ./dist/delete_media_from_zip${{ matrix.extension }} --help
        continue-on-error: true  # Continue even if the test fails

      - name: Archive build artifact
        uses: actions/upload-artifact@v3
        with:
          name: delete_media_from_zip_${{ matrix.platform }}
          path: dist/delete_media_from_zip${{ matrix.extension }}

  create-release:
    name: Create GitHub Release
    needs: build-and-test  # Will proceed even if some platforms failed
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        if: always()  # Ensures download happens even if previous jobs failed
        uses: actions/download-artifact@v3
        with:
          name: delete_media_from_zip_linux
          path: builds/
      - uses: actions/download-artifact@v3
        if: always()
        with:
          name: delete_media_from_zip_macos
          path: builds/
      - uses: actions/download-artifact@v3
        if: always()
        with:
          name: delete_media_from_zip_windows
          path: builds/

      - name: Create Release
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: |
            ## Changelog
            - Auto-generated release for ${{ github.ref }}

            ### Assets
            - Windows (.exe)
            - macOS (.app)
            - Linux (binary)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          assets: |
            builds/delete_media_from_zip_windows.exe
            builds/delete_media_from_zip_macos
            builds/delete_media_from_zip_linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
